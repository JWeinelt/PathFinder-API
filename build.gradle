buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
        
apply plugin: 'net.minecraftforge.gradle.forge'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.1.1'
group = 'de.julianweinelt.pathfinder' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'pathfinder'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"

    mappings = "snapshot_20171003"
}

dependencies {
    // hier kommen weitere Abh√§ngigkeiten hin, falls du welche brauchst
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", "1.12.2"

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version,
                'mcversion': "1.12.2"
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes(
                'FMLCorePluginContainsFMLMod': 'true',
                'Specification-Title': archivesBaseName,
                'Specification-Vendor': 'YourNameHere',
                'Specification-Version': version,
                'Implementation-Title': archivesBaseName,
                'Implementation-Version': version,
                'Implementation-Vendor': 'YourNameHere'
        )
    }
}
// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        //mavenJava(MavenPublication) {
        //    artifact jar
        //}
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'de.julianweinelt.pathfinder'
            artifactId = 'PathFinderAPI'
            version = '1.1.1'
        }
    }
    repositories {
        maven {
            url = uri("https://repo.codeblocksmc.de/releases")
            credentials {
                username = project.findProperty("repoUser")
                password = project.findProperty("repoPassword")
            }
        }
    }
}
